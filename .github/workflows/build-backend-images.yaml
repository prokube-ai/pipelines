name: KFP Backend Image Build

on:
  push:
    branches:
      - '*'
  pull_request:

env:
  KFP_PATH: "."
  # Example: IMAGE_PATH: "us-central1-docker.pkg.dev/my-project/my-repo"
  IMAGE_PATH: "${{ secrets.GCP_ARTIFACT_REGISTRY_PATH }}"
  DRIVER_IMAGE_NAME: "driver"
  LAUNCHER_IMAGE_NAME: "launcher-v2"
  APISERVER_IMAGE_NAME: "apiserver"
  PERSISTENCEAGENT_IMAGE_NAME: "persistence-agent"
  CACHESERVER_IMAGE_NAME: "cache-server"
  SWF_IMAGE_NAME: "scheduledworkflow"
  CONTROLLER_IMAGE_NAME: "viewercontroller"
  VIZ_IMAGE_NAME: "visualization"

jobs:
  supporting-images:
    runs-on: ubuntu-latest
    if: |
      contains(github.event.head_commit.message, '[apiserver]') ||
      contains(github.event.head_commit.message, '[backend-all]') ||
      contains(github.event.head_commit.message, '[driver-launcher]')
    container:
      image: golang:alpine3.19

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        apk update && apk add --no-cache bash openssl docker python3 curl jq sudo tar make

    - name: Auth GCloud CLI
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Login to Google Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: europe-west3-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Install ko
      uses: ko-build/setup-ko@v0.6

    - name: Build and Push Images with ko
      run: |
        cd ${GITHUB_WORKSPACE}/${KFP_PATH}/backend/src/v2/
        export DEV_IMAGE_PREFIX=${{ env.IMAGE_PATH }}/
        make build
        make image-dev

  apiserver-image:
    needs: supporting-images
    if: |
      contains(github.event.head_commit.message, '[apiserver]') ||
      contains(github.event.head_commit.message, '[backend-all]')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Auth GCloud CLI
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Docker Login to Google Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: europe-west3-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Build and Push API Server Image
      run: |
        # Inject custom driver and launcher image link to apiserver code.
        # Should theoretically be possible to do this using env vars,
        # but didn't work for us.
        variable_name="DefaultLauncherImage"
        new_value=${{ env.IMAGE_PATH }}/${{ env.LAUNCHER_IMAGE_NAME }}:latest
        escaped_new_value=$(printf '%s\n' "${new_value}" | sed -e 's/[\/&]/\\&/g')
        sed -i "s/\(${variable_name}\s*=\s*\"\)[^\"]*\"/\1${escaped_new_value}\"/g" \
                ${GITHUB_WORKSPACE}/${KFP_PATH}/backend/src/v2/compiler/argocompiler/container.go

        variable_name="DefaultDriverImage"
        new_value=${{ env.IMAGE_PATH }}/${{ env.DRIVER_IMAGE_NAME }}:latest
        escaped_new_value=$(printf '%s\n' "${new_value}" | sed -e 's/[\/&]/\\&/g')
        sed -i "s/\(${variable_name}\s*=\s*\"\)[^\"]*\"/\1${escaped_new_value}\"/g" \
                ${GITHUB_WORKSPACE}/${KFP_PATH}/backend/src/v2/compiler/argocompiler/container.go

        LATEST_TAG=${{ env.IMAGE_PATH }}/${{ env.APISERVER_IMAGE_NAME }}:latest
        COMMIT_TAG=${{ env.IMAGE_PATH }}/${{ env.APISERVER_IMAGE_NAME }}:commit-${{ github.sha }}

        docker build -t $LATEST_TAG -f backend/Dockerfile ${GITHUB_WORKSPACE}
        docker tag $LATEST_TAG $COMMIT_TAG
        docker push $LATEST_TAG
        docker push $COMMIT_TAG

  backend-images:
    needs: supporting-images
    if: |
      contains(github.event.head_commit.message, '[backend-all]')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Auth GCloud CLI
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Docker Login to Google Artifact Registry
      uses: docker/login-action@v3
      with:
        registry: europe-west3-docker.pkg.dev
        username: _json_key
        password: ${{ secrets.GCP_SA_KEY }}

    - name: Build and Push KFP Backend Images
      run: |
        variable_name="DefaultLauncherImage"
        new_value=${{ env.IMAGE_PATH }}/${{ env.LAUNCHER_IMAGE_NAME }}:latest
        escaped_new_value=$(printf '%s\n' "${new_value}" | sed -e 's/[\/&]/\\&/g')
        sed -i "s/\(${variable_name}\s*=\s*\"\)[^\"]*\"/\1${escaped_new_value}\"/g" \
                ${GITHUB_WORKSPACE}/${KFP_PATH}/backend/src/v2/compiler/argocompiler/container.go

        variable_name="DefaultDriverImage"
        new_value=${{ env.IMAGE_PATH }}/${{ env.DRIVER_IMAGE_NAME }}:latest
        escaped_new_value=$(printf '%s\n' "${new_value}" | sed -e 's/[\/&]/\\&/g')
        sed -i "s/\(${variable_name}\s*=\s*\"\)[^\"]*\"/\1${escaped_new_value}\"/g" \
                ${GITHUB_WORKSPACE}/${KFP_PATH}/backend/src/v2/compiler/argocompiler/container.go

        LATEST_TAG=${{ env.IMAGE_PATH }}/${{ env.PERSISTENCEAGENT_IMAGE_NAME }}:latest
        COMMIT_TAG=${{ env.IMAGE_PATH }}/${{ env.PERSISTENCEAGENT_IMAGE_NAME }}:commit-${{ github.sha }}
        docker build -t $LATEST_TAG -f backend/Dockerfile.persistenceagent ${GITHUB_WORKSPACE}
        docker tag $LATEST_TAG $COMMIT_TAG
        docker push $LATEST_TAG
        docker push $COMMIT_TAG

        LATEST_TAG=${{ env.IMAGE_PATH }}/${{ env.CACHESERVER_IMAGE_NAME }}:latest
        COMMIT_TAG=${{ env.IMAGE_PATH }}/${{ env.CACHESERVER_IMAGE_NAME }}:commit-${{ github.sha }}
        docker build -t $LATEST_TAG -f backend/Dockerfile.cacheserver ${GITHUB_WORKSPACE}
        docker tag $LATEST_TAG $COMMIT_TAG
        docker push $LATEST_TAG
        docker push $COMMIT_TAG

        LATEST_TAG=${{ env.IMAGE_PATH }}/${{ env.SWF_IMAGE_NAME }}:latest
        COMMIT_TAG=${{ env.IMAGE_PATH }}/${{ env.SWF_IMAGE_NAME }}:commit-${{ github.sha }}
        docker build -t $LATEST_TAG -f backend/Dockerfile.scheduledworkflow ${GITHUB_WORKSPACE}
        docker tag $LATEST_TAG $COMMIT_TAG
        docker push $LATEST_TAG
        docker push $COMMIT_TAG

        LATEST_TAG=${{ env.IMAGE_PATH }}/${{ env.CONTROLLER_IMAGE_NAME }}:latest
        COMMIT_TAG=${{ env.IMAGE_PATH }}/${{ env.CONTROLLER_IMAGE_NAME }}:commit-${{ github.sha }}
        docker build -t $LATEST_TAG -f backend/Dockerfile.viewercontroller ${GITHUB_WORKSPACE}
        docker tag $LATEST_TAG $COMMIT_TAG
        docker push $LATEST_TAG
        docker push $COMMIT_TAG

        LATEST_TAG=${{ env.IMAGE_PATH }}/${{ env.VIZ_IMAGE_NAME }}:latest
        COMMIT_TAG=${{ env.IMAGE_PATH }}/${{ env.VIZ_IMAGE_NAME }}:commit-${{ github.sha }}
        docker build -t $LATEST_TAG -f backend/Dockerfile.visualization ${GITHUB_WORKSPACE}
        docker tag $LATEST_TAG $COMMIT_TAG
        docker push $LATEST_TAG
        docker push $COMMIT_TAG
